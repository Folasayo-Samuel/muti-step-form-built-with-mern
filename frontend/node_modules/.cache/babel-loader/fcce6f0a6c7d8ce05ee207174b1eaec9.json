{"ast":null,"code":"var _jsxFileName = \"/home/saint/Desktop/multi-step-form-using-mern/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { BASE_API_URL } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userDetails, setUserDetails] = useState('');\n\n  const onSubmit = async data => {\n    console.log(data);\n\n    try {\n      const response = await axios.post(`${BASE_API_URL}/login`, data);\n      setSuccessMessage('User with the provided credentials found.');\n      setErrorMessage('');\n      setUserDetails(response.data);\n    } catch (error) {\n      console.log(error);\n\n      if (error.response) {\n        console.log('error', error.response.data);\n        setErrorMessage(error.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"input-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      children: [errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg login-error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"successMsg\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), userDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Following are the user details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"First name: \", userDetails.first_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Last name: \", userDetails.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Email: \", userDetails.user_email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Country: \", userDetails.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"State: \", userDetails.state]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"City: \", userDetails.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"first_name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"user_email\",\n          placeholder: \"Enter your email address\",\n          ref: register({\n            required: 'Email is required.',\n            pattern: {\n              value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n              message: 'Email is not valid.'\n            }\n          }),\n          className: `${errors.user_email ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), errors.user_email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.user_email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"user_password\",\n          placeholder: \"Choose a password\",\n          ref: register({\n            required: 'Password is required.',\n            minLength: {\n              value: 6,\n              message: 'Password should have at-least 6 characters.'\n            }\n          }),\n          className: `${errors.user_password ? 'input-error' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), errors.user_password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMsg\",\n          children: errors.user_password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Check Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"goFmvD45ndLK3BsmIWA+hx6L4HU=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/saint/Desktop/multi-step-form-using-mern/src/components/Login.js"],"names":["React","useState","useForm","Form","Button","axios","BASE_API_URL","Login","register","handleSubmit","errors","successMessage","setSuccessMessage","errorMessage","setErrorMessage","userDetails","setUserDetails","onSubmit","data","console","log","response","post","error","first_name","last_name","user_email","country","state","city","required","pattern","value","message","minLength","user_password"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { BASE_API_URL } from '../utils/constants';\n\nconst Login = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userDetails, setUserDetails] = useState('');\n\n  const onSubmit = async (data) => {\n    console.log(data);\n\n    try {\n      const response = await axios.post(`${BASE_API_URL}/login`, data);\n      setSuccessMessage('User with the provided credentials found.');\n      setErrorMessage('');\n      setUserDetails(response.data);\n    } catch (error) {\n      console.log(error);\n      if (error.response) {\n        console.log('error', error.response.data);\n        setErrorMessage(error.response.data);\n      }\n    }\n  };\n\n  return (\n    <Form className=\"input-form\" onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"col-md-6 offset-md-3\">\n        {errorMessage ? (\n          <p className=\"errorMsg login-error\">{errorMessage}</p>\n        ) : (\n          <div>\n            <p className=\"successMsg\">{successMessage}</p>\n\n            {userDetails && (\n              <div className=\"user-details\">\n                <p>Following are the user details:</p>\n                <div>First name: {userDetails.first_name}</div>\n                <div>Last name: {userDetails.last_name}</div>\n                <div>Email: {userDetails.user_email}</div>\n                <div>Country: {userDetails.country}</div>\n                <div>State: {userDetails.state}</div>\n                <div>City: {userDetails.city}</div>\n              </div>\n            )}\n          </div>\n        )}\n        <Form.Group controlId=\"first_name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"user_email\"\n            placeholder=\"Enter your email address\"\n            ref={register({\n              required: 'Email is required.',\n              pattern: {\n                value: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/,\n                message: 'Email is not valid.'\n              }\n            })}\n            className={`${errors.user_email ? 'input-error' : ''}`}\n          />\n          {errors.user_email && (\n            <p className=\"errorMsg\">{errors.user_email.message}</p>\n          )}\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"user_password\"\n            placeholder=\"Choose a password\"\n            ref={register({\n              required: 'Password is required.',\n              minLength: {\n                value: 6,\n                message: 'Password should have at-least 6 characters.'\n              }\n            })}\n            className={`${errors.user_password ? 'input-error' : ''}`}\n          />\n          {errors.user_password && (\n            <p className=\"errorMsg\">{errors.user_password.message}</p>\n          )}\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Check Login\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}